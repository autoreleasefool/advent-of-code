#!/usr/bin/env python3

from argparse import ArgumentParser
import sys

from aoc_util.commands.command import Command
from aoc_util.commands.create import Create
from aoc_util.commands.fetch import Fetch
from aoc_util.commands.open import Open
from aoc_util.commands.run import Run
from aoc_util.commands.submit import Submit
from aoc_util.commands.test import Test
from aoc_util.language import Language
from aoc_util.session import Session


_valid_years = range(2015, 2022)
_valid_days = range(1, 26)


def parse_args(args=None):
    if args is None:
        args = sys.argv[1:]

    parser = ArgumentParser(description="Advent of Code")

    parser.add_argument("-s", "--save", action="store_true", help="Save the output")

    parser.add_argument("--session", help="Set your session. Cached for future runs")

    parser.add_argument(
        "COMMAND", help="Command to run", type=Command, choices=list(Command)
    )
    parser.add_argument(
        "LANG",
        nargs="?",
        help="The language of the script to run. Cached for future runs",
        type=Language,
        choices=list(Language),
    )
    parser.add_argument(
        "YEAR",
        nargs="?",
        help="The year of the script to run. Cached for future runs",
        type=int,
        choices=_valid_years,
    )
    parser.add_argument(
        "DAY",
        nargs="?",
        help="The day of the script to run. Cached for future runs",
        type=int,
        choices=_valid_days,
    )

    parsed = parser.parse_args(args)

    command = Command(parsed.COMMAND)
    session = Session(command, parsed.session, parsed.LANG, parsed.YEAR, parsed.DAY, parsed.PART, parsed.save, parsed.strict)

    if command == Command.CREATE:
        Create().run(session)
    elif command == Command.FETCH:
        Fetch().run(session)
    elif command == Command.OPEN:
        Open().run(session)
    elif command == Command.RUN:
        Run().run(session)
    elif command == Command.SUBMIT:
        Submit().run(session)
    elif command == Command.TEST:
        Test().run(session)


if __name__ == "__main__":
    parse_args()
